/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.9
 * Generated at: 2023-06-09 02:21:29 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import java.text.*;
import java.lang.*;
import java.sql.*;
import java.util.Date;
import controles.Produto;

public final class prod_005fcons_005fgeral_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("java.text");
    _jspx_imports_packages.add("java.lang");
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("controles.Produto");
    _jspx_imports_classes.add("java.util.Date");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("    <head>\n");
      out.write("        <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">        \n");
      out.write("        <title>Consulta de Produtos - Geral</title>\n");
      out.write("        \n");
      out.write("        <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@20..48,100..700,0..1,-25..200\"/>\n");
      out.write("        <style>\n");
      out.write("            table {\n");
      out.write("                border-collapse: collapse;\n");
      out.write("                width: 100%;\n");
      out.write("            }      \n");
      out.write("            th, td{\n");
      out.write("                padding: 4px;\n");
      out.write("                text-align: left;\n");
      out.write("                border: 1px solid #DDD;\n");
      out.write("            }\n");
      out.write("            tr:hover {background-color: #D6EEEE;}            \n");
      out.write("            .material-symbols-outlined {\n");
      out.write("                font-variation-settings:\n");
      out.write("                'FILL' 0,\n");
      out.write("                'wght' 400,\n");
      out.write("                'GRAD' 0,\n");
      out.write("                'opsz' 24\n");
      out.write("            }\n");
      out.write("        </style>\n");
      out.write("        \n");
      out.write("    </head>\n");
      out.write("      <body>\n");
      out.write("        <h1>Produtos [Consulta-Lista]</h1>\n");
      out.write("        ");
             
            /*-- Consulta --*/                         
            try{
                Class.forName("com.mysql.cj.jdbc.Driver"); // Driver para MySQL -- Registra a Dll
                String url = "jdbc:mysql://localhost:3306/lojacell"; // Determina o servidor e banco(DB)
                Connection conexao = DriverManager.getConnection(url, "root", "");           

                Statement stmt = conexao.createStatement(); // Criar uma instrução com base na conexão.                
                String sql = "SELECT * FROM produto";       
                
                ResultSet rs = stmt.executeQuery(sql);
        
      out.write("        \n");
      out.write("               \n");
      out.write("        <table style=\"width:100%\">\n");
      out.write("            <tr bgcolor=\"F3F3F3\">\n");
      out.write("               <th>#</th>\n");
      out.write("               <th>Id.</th>\n");
      out.write("               <th>Nome</th>\n");
      out.write("               <th>Valor</th>\n");
      out.write("               <th>Fabricação</th>\n");
      out.write("               <th>Apagar ?</th>\n");
      out.write("               <th>Atualizar ?</th>\n");
      out.write("            </tr>\n");
      out.write("                \n");
      out.write("        ");

                while (rs.next()) {
        
      out.write("\n");
      out.write("            <tr>\n");
      out.write("               <td>");
      out.print( rs.getRow() );
      out.write("</td>\n");
      out.write("               <td>");
      out.print( rs.getString("pk_id") );
      out.write("</td>\n");
      out.write("               <td> <a href=\"prod_cons.jsp?nome_prod=");
      out.print( rs.getString("nome") );
      out.write(" \"> ");
      out.print( rs.getString("nome") );
      out.write(" </a> </td>\n");
      out.write("               <td>");
      out.print( rs.getString("valor") );
      out.write("</td>\n");
      out.write("               <td>");
      out.print( rs.getString("fabricacao") );
      out.write("</td>\n");
      out.write("               <td> <a href=\"prod_del.jsp?id=");
      out.print( rs.getString("pk_id") );
      out.write(" \"> <span class=\"material-symbols-outlined\">delete</span> </a> </td>\n");
      out.write("               <td> <a href=\"prod_alt_edit.jsp?id=");
      out.print( rs.getString("pk_id") );
      out.write(" \"> <span class=\"material-symbols-outlined\">update</span> </td>\n");
      out.write("            </tr>\n");
      out.write("        ");

                }    
        
      out.write("\n");
      out.write("        </table>\n");
      out.write("        ");

                stmt.close();             
            } catch (Exception ex) {
                out.println("<br> Erro:" + ex);
            }
        
      out.write("    \n");
      out.write("        <br><br>\n");
      out.write("        <button onclick=\"document.location='index.html'\"> Início</button>\n");
      out.write("      </body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
